{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleClick","flipped","className","alt","src","onClick","cardImages","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","useEffect","shuffleCards","shuffledCards","sort","Math","random","map","id","matched","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QACtD,OACE,sBAAKC,UAAWD,EAAU,eAAiB,OAA3C,UACE,qBAAKC,UAAU,QAAQC,IAAI,QAAQC,IAAKL,EAAKK,MAC7C,qBACEC,QAAS,kBAAML,EAAYD,IAC3BG,UAAU,OACVC,IAAI,OACJC,IAAI,sBCNZ,IAAME,EAAa,CACjB,CAAEF,IAAK,qBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,mBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,qBA+EMG,MA5Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAe,WACnB,IAAMC,EAAgB,UAAIf,EAAeA,GACtCgB,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GACJ,OAAO,2BAAKA,GAAZ,IAAkB2B,GAAIH,KAAKC,SAAUG,SAAS,OAElDb,EAAa,MACbE,EAAa,MACbN,EAASW,GACTT,EAAS,IAGLZ,EAAc,SAACD,GACfkB,IACJJ,EAAYG,EAAajB,GAAQe,EAAaf,KAGhDoB,qBAAU,WACJN,GAAaE,IACfG,GAAY,GACRL,EAAUT,MAAQW,EAAUX,KAC9BM,GAAS,SAACkB,GACR,OAAOA,EAAUH,KAAI,SAAC1B,GACpB,OAAIc,EAAUT,MAAQL,EAAKK,IAClB,2BAAKL,GAAZ,IAAkB4B,SAAS,IAEpB5B,QAIb8B,KAEAC,WAAWD,EAAW,QAGzB,CAAChB,EAAWE,IAEf,IAAMc,EAAY,WAChBf,EAAa,MACbE,EAAa,MACbE,GAAY,GACZN,GAAS,SAACmB,GACR,OAAOA,EAAY,MAIvB,OACE,sBAAK7B,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASe,EAAjB,sBACA,qBAAKlB,UAAU,YAAf,SACGO,EAAMgB,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,YAAaA,EACbC,QAASF,IAASc,GAAad,IAASgB,GAAahB,EAAK4B,SAHrD5B,EAAK2B,SAOhB,wCAAWf,SC/EjBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba3e5f09.chunk.js","sourcesContent":["import \"./SingleCard.css\";\r\n\r\nexport default function SingleCard({ card, handleClick, flipped }) {\r\n  return (\r\n    <div className={flipped ? \"card flipped\" : \"card\"}>\r\n      <img className=\"front\" alt=\"front\" src={card.src} />\r\n      <img\r\n        onClick={() => handleClick(card)}\r\n        className=\"back\"\r\n        alt=\"back\"\r\n        src=\"/img/cover.png\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SingleCard from \"./components/SingleCard\";\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\" },\n  { src: \"/img/potion-1.png\" },\n  { src: \"/img/ring-1.png\" },\n  { src: \"/img/scroll-1.png\" },\n  { src: \"/img/shield-1.png\" },\n  { src: \"/img/sword-1.png\" },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => {\n        return { ...card, id: Math.random(), matched: false };\n      });\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  const handleClick = (card) => {\n    if (disabled) return;\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (choiceOne.src === card.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(resetTurn, 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setDisabled(false);\n    setTurns((prevTurns) => {\n      return prevTurns + 1;\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleClick={handleClick}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}